import XCTest
@testable import ICCReader

final class DumpFileTests: XCTestCase {
    func testDumpICC() throws {
        var files: [(String, String)] = []
        
        /* https://github.com/bestbat/Windows-Server */
        files.append(("apl12600", "icm"))
        files.append(("can4200n", "icm"))
        files.append(("epssproh", "icm"))
        files.append(("epsspron", "icm"))
        files.append(("gdg10w50", "icm"))
        files.append(("gdg10w65", "icm"))
        files.append(("gdg10w93", "icm"))
        files.append(("gdg14w50", "icm"))
        files.append(("gdg14w65", "icm"))
        files.append(("gdg14w93", "icm"))
        files.append(("gdg18w50", "icm"))
        files.append(("gdg18w65", "icm"))
        files.append(("gdg18w93", "icm"))
        files.append(("gdg22w50", "icm"))
        files.append(("gdg22w65", "icm"))
        files.append(("gdg22w93", "icm"))
        files.append(("gend9318", "icm"))
        files.append(("gend9322", "icm"))
        files.append(("hp310nd", "icm"))
        files.append(("hp310ng", "icm"))
        files.append(("hp320nd", "icm"))
        files.append(("hp320ng", "icm"))
        files.append(("hp500nd", "icm"))
        files.append(("hp500ng", "icm"))
        files.append(("hp540nd", "icm"))
        files.append(("hp540ng", "icm"))
        files.append(("hp540np", "icm"))
        files.append(("hp550nd", "icm"))
        files.append(("hp550ng", "icm"))
        files.append(("hp560nd", "icm"))
        files.append(("hp560ng", "icm"))
        files.append(("hp850cn", "icm"))
        files.append(("hp850cp", "icm"))
        files.append(("hp870cxn", "icm"))
        files.append(("hp870cxp", "icm"))
        files.append(("hp1200bd", "icm"))
        files.append(("hp1200bp", "icm"))
        files.append(("hp1200d", "icm"))
        files.append(("hp1200nd", "icm"))
        files.append(("hp1200np", "icm"))
        files.append(("hp1200p", "icm"))
        files.append(("hp1600bd", "icm"))
        files.append(("hp1600bg", "icm"))
        files.append(("hp1600bp", "icm"))
        files.append(("hp1600cn", "icm"))
        files.append(("hp1600cp", "icm"))
        files.append(("hp1600d", "icm"))
        files.append(("hp1600g", "icm"))
        files.append(("hp1600mn", "icm"))
        files.append(("hp1600mp", "icm"))
        files.append(("hp1600nd", "icm"))
        files.append(("hp1600ng", "icm"))
        files.append(("hp1600np", "icm"))
        files.append(("hp1600p", "icm"))
        files.append(("hpcl5mbp", "icm"))
        files.append(("hpcl5mnd", "icm"))
        files.append(("hpclj", "icm"))
        files.append(("hpclj5", "icm"))
        files.append(("hpclj5mn", "icm"))
        files.append(("hpcljbd", "icm"))
        files.append(("hpcljnd", "icm"))
        files.append(("lx1275d", "icm"))
        files.append(("mnebug15", "icm"))
        files.append(("mnebug18", "icm"))
        files.append(("mnebug21", "icm"))
        files.append(("mnp22g15", "icm"))
        files.append(("mnp22g18", "icm"))
        files.append(("mnp22g21", "icm"))
        files.append(("ntscic22", "icm"))
        files.append(("radd5018", "icm"))
        files.append(("srgb", "icm"))
        files.append(("tek3pxi", "icm"))
        files.append(("tekph560", "icm"))
        files.append(("tekph600", "icm"))
        files.append(("tkph340d", "icm"))
        files.append(("tkph340h", "icm"))
        files.append(("tkph350d", "icm"))
        files.append(("tkph550d", "icm"))
        files.append(("xrx4915d", "icm"))
        files.append(("xrx4915h", "icm"))
        files.append(("xrxdpc55", "icm"))
        
        /* https://www.fujifilm.eu/uk/support/photofinishing/colour-profiles */
        files.append(("Fuji_Frontier5-sRGB_CA-Pearl_v3a", "icm"))
        files.append(("Agfa_d-lab2_Fuji-CA_v3a", "icm"))
        files.append(("Agfa_d-lab2_Fuji-CA-DPII_v3a", "icm"))
        files.append(("Chromira_FF_Album_HD_Glossy", "icc"))
        files.append(("Chromira_FF_Album_Lustre", "icc"))
        files.append(("Chromira_FF_CA_G_L", "icc"))
        files.append(("Chromira_FF_DPII_G_L", "icc"))
        files.append(("Chromira_FF_DPII_M_S", "icc"))
        files.append(("Chromira_FujiClear", "icc"))
        files.append(("Chromira_FujiFlex", "icc"))
        files.append(("Chromira_FujiTrans", "icc"))
        files.append(("Durst_Lambda_Fuji-CA-DPII_v3a", "icm"))
        files.append(("Durst_Lambda_Fuji-CA-Pearl_v3a", "icm"))
        files.append(("Durst_Lambda_Fuji-CA-Writable_v3a", "icm"))
        files.append(("Durst_Lambda_FujiClear_v3a", "icm"))
        files.append(("Durst_Lambda_FujiFlex_v3aNeu", "icm"))
        files.append(("Durst_Lambda_FujiTrans_v3a", "icm"))
        files.append(("Durst_Theta50_Fuji-CA-Album_v3a", "icm"))
        files.append(("Durst_Theta50_Fuji-CA-DPII_v3a", "icm"))
        files.append(("Durst_Theta50_Fuji-CA-Writable_v3a", "icm"))
        files.append(("Durst_Theta76_Fuji-CA-DPII_v3a", "icm"))
        files.append(("Durst_Theta76_Fuji-CA-Writable_v3a", "icm"))
        files.append(("Durst_Zeta_Fuji-CA-Album_v3a", "icm"))
        files.append(("Durst-Epsilon_Fuji-CA-DPII", "icm"))
        files.append(("Fuji_Frontier-PD_CA-DPII_v3a", "icm"))
        files.append(("Fuji_Frontier-PD_CA-HD_v3a", "icm"))
        files.append(("Fuji_Frontier-PD_CA-Pearl_v3a", "icm"))
        files.append(("Fuji_Frontier-PD_CA-Writable_v3a", "icm"))
        files.append(("Fuji_Frontier-Scanner_v3a", "icm"))
        files.append(("Fuji_Frontier5-sRGB_CA_Writable_v3a", "icm"))
        files.append(("Fuji_Frontier5-sRGB_CA-DPII_v3a", "icm"))
        files.append(("Fuji_Frontier5-sRGB_CA-HD_v3a", "icm"))
        files.append(("Fuji_PG-3500_CM-off_V1", "icc"))
        files.append(("Fuji_PG-3500_CM-on3_V1", "icc"))
        files.append(("Fuji_PG-4000_CM-off_V1", "icc"))
        files.append(("Fuji_PG-4000_CM-on3_V1", "icc"))
        files.append(("Fuji_PG-4500_CM-off_V1", "icc"))
        files.append(("Fuji_PG-4500_CM-on3_V1", "icc"))
        files.append(("ZBE_Chromira_Fuji-CA-DPII_v3a", "icm"))
        files.append(("ZBE_Chromira_Fuji-CA-Pearl_v3a", "icm"))
        
        /* http://github.com/AcademySoftwareFoundation/OpenColorIO */
        files.append(("icc-test-1", "icc"))
        files.append(("icc-test-3", "icm"))
        
        /* http://colormanagement.org/en/download.html */
        files.append(("ISOcoated_v2_300_bas", "ICC"))
        files.append(("ISOcoated_v2_bas", "ICC"))
        files.append(("ISOcoated_v2_grey1c_bas", "ICC"))
        files.append(("ISOnewspaper_v4_26_bas", "ICC"))
        files.append(("ISOuncoatedyellowish_bas", "ICC"))
        files.append(("PSO_Coated_300_NPscreen_ISO12647_bas", "ICC"))
        files.append(("PSO_Coated_NPscreen_ISO12647_bas", "ICC"))
        files.append(("PSO_LWC_Improved_bas", "ICC"))
        files.append(("PSO_LWC_Standard_bas", "ICC"))
        files.append(("PSO_MFC_Paper_bas", "ICC"))
        files.append(("PSO_SNP_Paper_bas", "ICC"))
        files.append(("PSO_Uncoated_ISO12647_bas", "ICC"))
        files.append(("PSO_Uncoated_NPscreen_ISO12647_bas", "ICC"))
        files.append(("SC_paper_bas", "ICC"))
        files.append(("coated_FOGRA39_GCR_bas", "icc"))
        files.append(("GRACoL2006_Coated1_GCR_bas", "icc"))
        files.append(("SWOP2006_Coated3_GCR_bas", "icc"))
        files.append(("SWOP2006_Coated5_GCR_bas", "icc"))
        files.append(("uncoated_FOGRA29_GCR_bas", "icc"))
        files.append(("uncoatedYellow_FOGRA30_GCR_bas", "icc"))
        files.append(("Web_SC_FOGRA40_GCR_bas", "icc"))
        files.append(("webcoated_FOGRA28_GCR_bas", "icc"))
        
        /* RefIccMAX-Testing-2.1.17 */
        files.append(("CMYK_3DLUTs", "icc"))
        files.append(("CMYK_3DLUTs2", "icc"))
        files.append(("CameraModel", "icc"))
        files.append(("ElevenChanKubelkaMunk", "icc"))
        files.append(("RGBWProjector", "icc"))
        files.append(("argbCalc", "icc"))
        files.append(("cm", "icc"))
        files.append(("sbgrCalcTest", "icc"))
        files.append(("srgbCalc++Test", "icc"))
        files.append(("srgbCalcTest", "icc"))
        files.append(("GrayGSDF", "icc"))
        files.append(("LCDDisplay", "icc"))
        files.append(("LaserProjector", "icc"))
        files.append(("Rec2020rgb", "icc"))
        files.append(("Rec2020rgbDirect", "icc"))
        files.append(("Rec2100HlgFull", "icc"))
        files.append(("Rec2100HlgNarrow", "icc"))
        files.append(("RgbGSDF", "icc"))
        files.append(("sRGB_D65_MAT-300lx", "icc"))
        files.append(("sRGB_D65_MAT-500lx", "icc"))
        files.append(("ISO22028-Encoded-bg-sRGB", "icc"))
        files.append(("ISO22028-Encoded-sRGB", "icc"))
        files.append(("sRgbEncoding", "icc"))
        files.append(("sRgbEncodingOverrides", "icc"))
        files.append(("Lab_float-D65_2deg-Part1", "icc"))
        files.append(("Lab_float-IllumA_2deg-Part2", "icc"))
        files.append(("Lab_int-D65_2deg-Part1", "icc"))
        files.append(("Lab_int-IllumA_2deg-Part2", "icc"))
        files.append(("Rec2100HlgFull-Part1", "icc"))
        files.append(("Rec2100HlgFull-Part2", "icc"))
        files.append(("Rec2100HlgFull-Part3", "icc"))
        files.append(("Spec400_10_700-D50_2deg-Part1", "icc"))
        files.append(("Spec400_10_700-D93_2deg-Part2", "icc"))
        files.append(("XYZ_float-D65_2deg-Part1", "icc"))
        files.append(("XYZ_float-IllumA_2deg-Part2", "icc"))
        files.append(("XYZ_int-D65_2deg-Part1", "icc"))
        files.append(("XYZ_int-IllumA_2deg-Part2", "icc"))
        files.append(("SparseMatrixNamedColor", "icc"))
        files.append(("SparseMatrixNamedColor2", "icc"))
        files.append(("17ChanPart1", "icc"))
        files.append(("Lab_float-D50_2deg", "icc"))
        files.append(("Lab_float-D93_2deg-MAT", "icc"))
        files.append(("Lab_int-D65_2deg-MAT", "icc"))
        files.append(("Lab_int-IllumA_2deg-MAT", "icc"))
        files.append(("Lab_int-IllumA_2deg-MtxCAT-Lvl2", "icc"))
        files.append(("Spec380_10_730-D50_2deg", "icc"))
        files.append(("Spec380_10_730-D65_2deg-MAT", "icc"))
        files.append(("Spec380_1_780-D50_2deg", "icc"))
        files.append(("Spec380_5_780-D50_2deg", "icc"))
        files.append(("Spec400_10_700-B_2deg-Abs", "icc"))
        files.append(("Spec400_10_700-B_2deg-CAT02", "icc"))
        files.append(("Spec400_10_700-B_2deg-MAT", "icc"))
        files.append(("Spec400_10_700-D50_10deg-Abs", "icc"))
        files.append(("Spec400_10_700-D50_10deg-MAT", "icc"))
        files.append(("Spec400_10_700-D50_20yo2deg-MAT", "icc"))
        files.append(("Spec400_10_700-D50_2deg-Abs", "icc"))
        files.append(("Spec400_10_700-D50_2deg", "icc"))
        files.append(("Spec400_10_700-D50_40yo2deg-MAT", "icc"))
        files.append(("Spec400_10_700-D50_60yo2deg-MAT", "icc"))
        files.append(("Spec400_10_700-D50_80yo2deg-MAT", "icc"))
        files.append(("Spec400_10_700-D65_10deg-Abs", "icc"))
        files.append(("Spec400_10_700-D65_10deg-MAT", "icc"))
        files.append(("Spec400_10_700-D65_20yo2deg-MAT", "icc"))
        files.append(("Spec400_10_700-D65_2deg-Abs", "icc"))
        files.append(("Spec400_10_700-D65_2deg-MAT", "icc"))
        files.append(("Spec400_10_700-D65_40yo2deg-MAT", "icc"))
        files.append(("Spec400_10_700-D65_60yo2deg-MAT", "icc"))
        files.append(("Spec400_10_700-D65_80yo2deg-MAT", "icc"))
        files.append(("Spec400_10_700-D93_10deg-Abs", "icc"))
        files.append(("Spec400_10_700-D93_10deg-MAT", "icc"))
        files.append(("Spec400_10_700-D93_2deg-Abs", "icc"))
        files.append(("Spec400_10_700-D93_2deg-MAT", "icc"))
        files.append(("Spec400_10_700-DB_2deg-Abs", "icc"))
        files.append(("Spec400_10_700-DB_2deg-CAT02", "icc"))
        files.append(("Spec400_10_700-DB_2deg-MAT", "icc"))
        files.append(("Spec400_10_700-DG_2deg-Abs", "icc"))
        files.append(("Spec400_10_700-DG_2deg-CAT02", "icc"))
        files.append(("Spec400_10_700-DG_2deg-MAT", "icc"))
        files.append(("Spec400_10_700-DR_2deg-Abs", "icc"))
        files.append(("Spec400_10_700-DR_2deg-CAT02", "icc"))
        files.append(("Spec400_10_700-DR_2deg-MAT", "icc"))
        files.append(("Spec400_10_700-F11_2deg-CAT", "icc"))
        files.append(("Spec400_10_700-F11_2deg-MAT", "icc"))
        files.append(("Spec400_10_700-G_2deg-Abs", "icc"))
        files.append(("Spec400_10_700-G_2deg-CAT02", "icc"))
        files.append(("Spec400_10_700-G_2deg-MAT", "icc"))
        files.append(("Spec400_10_700-IllumA_10deg-Abs", "icc"))
        files.append(("Spec400_10_700-IllumA_10deg-MAT", "icc"))
        files.append(("Spec400_10_700-IllumA_2deg-Abs", "icc"))
        files.append(("Spec400_10_700-IllumA_2deg-CAT", "icc"))
        files.append(("Spec400_10_700-IllumA_2deg-MAT", "icc"))
        files.append(("Spec400_10_700-N_2deg-Abs", "icc"))
        files.append(("Spec400_10_700-N_2deg-CAT02", "icc"))
        files.append(("Spec400_10_700-N_2deg-MAT", "icc"))
        files.append(("Spec400_10_700-R1_2deg-Abs", "icc"))
        files.append(("Spec400_10_700-R1_2deg-CAT02", "icc"))
        files.append(("Spec400_10_700-R1_2deg-MAT", "icc"))
        files.append(("Spec400_10_700-R2_2deg-Abs", "icc"))
        files.append(("Spec400_10_700-R2_2deg-CAT02", "icc"))
        files.append(("Spec400_10_700-R2_2deg-MAT", "icc"))
        files.append(("Spec400_10_700-Y_2deg-Abs", "icc"))
        files.append(("Spec400_10_700-Y_2deg-CAT02", "icc"))
        files.append(("Spec400_10_700-Y_2deg-MAT", "icc"))
        files.append(("XYZ_float-CSAJ_A_2deg-CAT02", "icc"))
        files.append(("XYZ_float-CSAJ_A_2deg-LutCAT-Lvl2", "icc"))
        files.append(("XYZ_float-CSAJ_A_2deg-MtxCAT-Lvl2", "icc"))
        files.append(("XYZ_float-CSAJ_D65_2deg-CAT02", "icc"))
        files.append(("XYZ_float-CSAJ_D65_2deg-LutCAT-Lvl2", "icc"))
        files.append(("XYZ_float-CSAJ_D65_2deg-MtxCAT-Lvl2", "icc"))
        files.append(("XYZ_float-D50_2deg", "icc"))
        files.append(("XYZ_float-D65_2deg-MAT", "icc"))
        files.append(("XYZ_float-IllumA_2deg-CAT02", "icc"))
        files.append(("XYZ_float-IllumA_2deg-LutCAT-Lvl2", "icc"))
        files.append(("XYZ_float-IllumA_2deg-MtxCAT-Lvl2", "icc"))
        files.append(("XYZ_int-D50_2deg", "icc"))
        files.append(("XYZ_int-D65_2deg-MAT-Lvl2", "icc"))
        files.append(("XYZ_int-D65_2deg-MAT", "icc"))
        files.append(("RefDecC", "icc"))
        files.append(("RefDecH", "icc"))
        files.append(("RefIncW", "icc"))
        files.append(("SixChanInputRef", "icc"))
        files.append(("argbRef", "icc"))
        files.append(("srgbRef", "icc"))
        files.append(("17ChanWithSpots-MVIS", "icc"))
        files.append(("18ChanWithSpots-MVIS", "icc"))
        files.append(("6ChanSelect-MID", "icc"))
        files.append(("sRGB_IEC61966_21", "icm"))
        
        /* http://www.color.org/ */
        files.append(("FluorescentNamedColor", "icc"))
        files.append(("Lab-D50_2deg", "icc"))
        files.append(("NamedColor", "icc"))
        files.append(("SixChanCameraRef", "icc"))
        files.append(("Spec400_10_700-D50-Abs_10deg", "icc"))
        files.append(("Spec400_10_700-IllumA-Abs_2deg", "icc"))
        files.append(("Spec400_10_700-IllumA-Abs_10deg (1)", "icc"))
        files.append(("Spec400_10_700-IllumA-Abs_10deg", "icc"))
        files.append(("sRGB_D65_colorimetric", "icc"))
        files.append(("sRGB_D65_MAT", "icc"))
        files.append(("sRGB_ICC_v4_Appearance", "icc"))
        files.append(("sRGB_ISO22028", "icc"))
        
        /* http://www.color.org/srgbprofiles.xalter */
        files.append(("sRGB_v4_ICC_preference_displayclass", "icc"))
        files.append(("sRGB_v4_ICC_preference", "icc"))
        files.append(("sRGB2014", "icc"))
        
        /* http://www.color.org/XYZprofiles.xalter */
        files.append(("D50_XYZ", "icc"))
        files.append(("D55_XYZ", "icc"))
        files.append(("D65_XYZ", "icc"))
        files.append(("D65channelscaledXYZ", "icc"))
        
        /* http://www.color.org/romm.xalter */
        files.append(("ISO22028-2_ROMM-RGB", "icc"))
        
        /* http://www.color.org/probeprofile.xalter */
        files.append(("Probev1_ICCv2", "icc"))
        files.append(("Probev1_ICCv4", "icc"))
        files.append(("Probev2_ICCv4", "icc"))
        
        /* http://www.color.org/prmg_gamutwarning.xalter */
        files.append(("PRMG_RGB-sRGB_based", "icc"))
        
        /* http://www.color.org/exchange_space.xalter */
        files.append(("PRMG_v2.0.1_MR", "icc"))
        
        /* http://www.color.org/rec709.xalter */
        files.append(("ITU_RBT709ReferenceDisplay", "icc"))
        
        /* http://www.color.org/scene-referred.xalter */
        files.append(("ISO22028_3_RIMM_RGB_exCR", "icc"))
        files.append(("linear_RIMM_RGB_v4", "icc"))

#if false
        /* http://www.color.org/registry/index.xalter */
        files.append(("CGATS21_CRPC1", "icc"))
        files.append(("CGATS21_CRPC2", "icc"))
        files.append(("CGATS21_CRPC3", "icc"))
        files.append(("CGATS21_CRPC4", "icc"))
        files.append(("CGATS21_CRPC5", "icc"))
        files.append(("CGATS21_CRPC6", "icc"))
        files.append(("CGATS21_CRPC7", "icc"))
        files.append(("Coated_Fogra39L_VIGC_260", "icc"))
        files.append(("Coated_Fogra39L_VIGC_300", "icc"))
        files.append(("GRACoL2006_Coated1v2", "icc"))
        files.append(("GRACoL2013_CRPC6", "icc"))
        files.append(("GRACoL2013UNC_CRPC3", "icc"))
        files.append(("SC_paper_eci", "icc"))
        files.append(("SNAP2007", "icc"))
        files.append(("SWOP2006_Coated3v2", "icc"))
        files.append(("SWOP2006_Coated5v2", "icc"))
        files.append(("SWOP2013C3_CRPC5", "icc"))
        files.append(("Uncoated_Fogra47L_VIGC_260", "icc"))
        files.append(("Uncoated_Fogra47L_VIGC_300", "icc"))
        
        /* https://github.com/holoto/ICC-Profiles */
        files.append(("Philips BDM4065UC user define mode", "icc"))
        files.append(("acer_al2616wd", "icc"))
        files.append(("acer_predator_xb240h_user", "icm"))
        files.append(("AnimePalette", "icc"))
        files.append(("aoc_i2353_warm", "icc"))
        files.append(("apple_30_cinema_user", "icm"))
        files.append(("apple_imac27", "icc"))
        files.append(("Asus MS246H sRGB", "icc"))
        files.append(("Asus MS246H User Mode", "icc"))
        files.append(("asus_pa246q_srgb", "icc"))
        files.append(("asus_rog_swift_pg348q", "icc"))
        files.append(("asus_x502ca_user", "icc"))
        files.append(("BenQ XL2410T - sRGB", "icc"))
        files.append(("BenQ XL2410T - Standard", "icc"))
        files.append(("benq_gw2450hm_normal_mode", "icc"))
        files.append(("benq_gw2450hm", "icc"))
        files.append(("benq_gw2765ht", "icc"))
        files.append(("benq_pg2401pt_adobergb", "icc"))
        files.append(("benq_pg2401pt_srgb", "icc"))
        files.append(("benq_xl2420t", "icc"))
        files.append(("benq_xl2720z", "icc"))
        files.append(("benq_xl2730z", "icc"))
        files.append(("BlacklightPoster", "icc"))
        files.append(("CobaltCarmine", "icc"))
        files.append(("ColorNegative", "icc"))
        files.append(("Crossover Blade Q27 1", "icm"))
        files.append(("dell_p2414h", "icc"))
        files.append(("dell_p2714h", "icc"))
        files.append(("dell_u2211h", "icc"))
        files.append(("dell_u2311h_custom", "icc"))
        files.append(("Dell_U2410_sRGB_mode", "icc"))
        files.append(("dell_u2410_user4", "icm"))
        files.append(("dell_u2417hj", "icc"))
        files.append(("eizo_sx2762w_srgb", "icc"))
        files.append(("GoldBlue", "icc"))
        files.append(("GoldCrimson", "icc"))
        files.append(("GreenRed", "icc"))
        files.append(("HP ZR24W - sRGB Mode v2", "icc"))
        files.append(("HP ZR24W - sRGB Mode", "icc"))
        files.append(("NEC PA271W-SV - Adobe RGB", "icc"))
        files.append(("NEC PA271W-SV - Full", "icc"))
        files.append(("NEC PA271W-SV - High Bright", "icc"))
        files.append(("NEC PA271W-SV - sRGB", "icc"))
        files.append(("nec_20wgx2_user1", "icc"))
        files.append(("nec_ea231wmi_srgb", "icc"))
        files.append(("nec_p241w_srgb", "icc"))
        files.append(("P3D65", "icc"))
        files.append(("Pastel8Hues", "icc"))
        files.append(("Philips BDM4065UC SmartUniformity mode", "icc"))
        files.append(("RedBlueYelllow", "icc"))
        files.append(("samsung_s27b970d_highbright", "icc"))
        files.append(("samsung_s27b970d_srgb", "icc"))
        files.append(("samsung_s27b970d_standard", "icc"))
        files.append(("SiennaBlue", "icc"))
        files.append(("Smokey", "icc"))
        files.append(("TealMagentaGold", "icc"))
        files.append(("TotalInkPreview", "icc"))
        files.append(("TurquoiseSepia", "icc"))
        files.append(("Viewsonic VP2770-LED Native", "icc"))
        files.append(("Viewsonic VP2770-LED sRGB", "icc"))
        files.append(("Viewsonic VP2770-LED User Color", "icc"))
        files.append(("viewsonic_vp2780-4k", "icc"))
        
        /* https://github.com/rodlie/geticc */
        files.append(("geticc_test", "icc"))
        
        /* https://github.com/oyranos-cms/oyranos */
        files.append(("profile", "icc"))
        
        /* https://github.com/kornelski/rust-lcms2 */
        files.append(("gray18", "icc"))
        files.append(("sGray", "icc"))
        files.append(("tinysrgb", "icc"))
        
        /* https://github.com/saucecontrol/Compact-ICC-Profiles */
        files.append(("ProPhoto-v2-magic", "icc"))
        files.append(("AdobeCompat-v2", "icc"))
        files.append(("AppleCompat-v2", "icc"))
        files.append(("ColorMatchCompat-v2", "icc"))
        files.append(("DisplayP3-v2-magic", "icc"))
        files.append(("DisplayP3-v2-micro", "icc"))
        files.append(("DisplayP3-v4", "icc"))
        files.append(("DisplayP3Compat-v2-magic", "icc"))
        files.append(("DisplayP3Compat-v2-micro", "icc"))
        files.append(("DisplayP3Compat-v4", "icc"))
        files.append(("ProPhoto-v2-micro", "icc"))
        files.append(("ProPhoto-v4", "icc"))
        files.append(("Rec709-v2-magic", "icc"))
        files.append(("Rec709-v2-micro", "icc"))
        files.append(("Rec709-v4", "icc"))
        files.append(("Rec2020-v2-magic", "icc"))
        files.append(("Rec2020-v2-micro", "icc"))
        files.append(("Rec2020-v4", "icc"))
        files.append(("Rec2020Compat-v2-magic", "icc"))
        files.append(("Rec2020Compat-v2-micro", "icc"))
        files.append(("Rec2020Compat-v4", "icc"))
        files.append(("scRGB-v2", "icc"))
        files.append(("sGrey-v2-magic", "icc"))
        files.append(("sGrey-v2-micro", "icc"))
        files.append(("sGrey-v2-nano", "icc"))
        files.append(("sGrey-v4", "icc"))
        files.append(("sRGB-v2-magic", "icc"))
        files.append(("sRGB-v2-micro", "icc"))
        files.append(("sRGB-v2-nano", "icc"))
        files.append(("sRGB-v4", "icc"))
        files.append(("WideGamutCompat-v2", "icc"))
         
        /* https://github.com/CreunaFI/color-space-fixer */
        files.append(("generic-cmyk", "icm"))
         
        /* https://github.com/lovell/icc */
        files.append(("ILFORD_CANpro-4000_GPGFG_ProPlatin", "icc"))
        files.append(("sRGB_IEC61966-2-1_black_scaled", "icc"))
         
        /* https://github.com/mm2/Little-CMS */
        files.append(("crayons", "icc"))
        files.append(("ibm-t61", "icc"))
        files.append(("new", "icc"))
        files.append(("test1", "icc"))
        files.append(("test2", "icc"))
        files.append(("test3", "icc"))
        files.append(("test5", "icc"))
        files.append(("test4", "icc"))
        files.append(("TestCLT", "icc"))
         
        /* https://github.com/ellelstone/elles_icc_profiles */
        files.append(("ACES-elle-V2-g10", "icc"))
        files.append(("ACES-elle-V2-g18", "icc"))
        files.append(("ACES-elle-V2-g22", "icc"))
        files.append(("ACES-elle-V2-labl", "icc"))
        files.append(("ACES-elle-V2-srgbtrc", "icc"))
        files.append(("ACES-elle-V4-g10", "icc"))
        files.append(("ACES-elle-V4-g18", "icc"))
        files.append(("ACES-elle-V4-g22", "icc"))
        files.append(("ACES-elle-V4-labl", "icc"))
        files.append(("ACES-elle-V4-srgbtrc", "icc"))
        files.append(("ACEScg-elle-V2-g10", "icc"))
        files.append(("ACEScg-elle-V2-g18", "icc"))
        files.append(("ACEScg-elle-V2-g22", "icc"))
        files.append(("ACEScg-elle-V2-labl", "icc"))
        files.append(("ACEScg-elle-V2-rec709", "icc"))
        files.append(("ACEScg-elle-V2-srgbtrc", "icc"))
        files.append(("ACEScg-elle-V4-g10", "icc"))
        files.append(("ACEScg-elle-V4-g18", "icc"))
        files.append(("ACEScg-elle-V4-g22", "icc"))
        files.append(("ACEScg-elle-V4-labl", "icc"))
        files.append(("ACEScg-elle-V4-rec709", "icc"))
        files.append(("ACEScg-elle-V4-srgbtrc", "icc"))
        files.append(("AllColorsRGB-elle-V2-g10", "icc"))
        files.append(("AllColorsRGB-elle-V2-g18", "icc"))
        files.append(("AllColorsRGB-elle-V2-g22", "icc"))
        files.append(("AllColorsRGB-elle-V2-labl", "icc"))
        files.append(("AllColorsRGB-elle-V2-rec709", "icc"))
        files.append(("AllColorsRGB-elle-V2-srgbtrc", "icc"))
        files.append(("AllColorsRGB-elle-V4-g10", "icc"))
        files.append(("AllColorsRGB-elle-V4-g18", "icc"))
        files.append(("AllColorsRGB-elle-V4-g22", "icc"))
        files.append(("AllColorsRGB-elle-V4-labl", "icc"))
        files.append(("AllColorsRGB-elle-V4-rec709", "icc"))
        files.append(("AllColorsRGB-elle-V4-srgbtrc", "icc"))
        files.append(("CIERGB-elle-V2-g10", "icc"))
        files.append(("CIERGB-elle-V2-g18", "icc"))
        files.append(("CIERGB-elle-V2-g22", "icc"))
        files.append(("CIERGB-elle-V2-labl", "icc"))
        files.append(("CIERGB-elle-V2-rec709", "icc"))
        files.append(("CIERGB-elle-V2-srgbtrc", "icc"))
        files.append(("CIERGB-elle-V4-g10", "icc"))
        files.append(("CIERGB-elle-V4-g18", "icc"))
        files.append(("CIERGB-elle-V4-g22", "icc"))
        files.append(("CIERGB-elle-V4-labl", "icc"))
        files.append(("CIERGB-elle-V4-rec709", "icc"))
        files.append(("CIERGB-elle-V4-srgbtrc", "icc"))
        files.append(("ClayRGB-elle-V2-g10", "icc"))
        files.append(("ClayRGB-elle-V2-g18", "icc"))
        files.append(("ClayRGB-elle-V2-g22", "icc"))
        files.append(("ClayRGB-elle-V2-labl", "icc"))
        files.append(("ClayRGB-elle-V2-rec709", "icc"))
        files.append(("ClayRGB-elle-V2-srgbtrc", "icc"))
        files.append(("ClayRGB-elle-V4-g10", "icc"))
        files.append(("ClayRGB-elle-V4-g18", "icc"))
        files.append(("ClayRGB-elle-V4-g22", "icc"))
        files.append(("ClayRGB-elle-V4-labl", "icc"))
        files.append(("ClayRGB-elle-V4-rec709", "icc"))
        files.append(("ClayRGB-elle-V4-srgbtrc", "icc"))
        files.append(("Gray-elle-V2-g10", "icc"))
        files.append(("Gray-elle-V2-g18", "icc"))
        files.append(("Gray-elle-V2-g22", "icc"))
        files.append(("Gray-elle-V2-labl", "icc"))
        files.append(("Gray-elle-V2-rec709", "icc"))
        files.append(("Gray-elle-V2-srgbtrc", "icc"))
        files.append(("Gray-elle-V4-g10", "icc"))
        files.append(("Gray-elle-V4-g18", "icc"))
        files.append(("Gray-elle-V4-g22", "icc"))
        files.append(("Gray-elle-V4-labl", "icc"))
        files.append(("Gray-elle-V4-rec709", "icc"))
        files.append(("Gray-elle-V4-srgbtrc", "icc"))
        files.append(("IdentityRGB-elle-V2-g10", "icc"))
        files.append(("IdentityRGB-elle-V2-g18", "icc"))
        files.append(("IdentityRGB-elle-V2-g22", "icc"))
        files.append(("IdentityRGB-elle-V2-labl", "icc"))
        files.append(("IdentityRGB-elle-V2-rec709", "icc"))
        files.append(("IdentityRGB-elle-V2-srgbtrc", "icc"))
        files.append(("IdentityRGB-elle-V4-g10", "icc"))
        files.append(("IdentityRGB-elle-V4-g18", "icc"))
        files.append(("IdentityRGB-elle-V4-g22", "icc"))
        files.append(("IdentityRGB-elle-V4-labl", "icc"))
        files.append(("IdentityRGB-elle-V4-rec709", "icc"))
        files.append(("IdentityRGB-elle-V4-srgbtrc", "icc"))
        files.append(("Lab-D50-Identity-elle-V2", "icc"))
        files.append(("Lab-D50-Identity-elle-V4", "icc"))
        files.append(("LargeRGB-elle-V2-g10", "icc"))
        files.append(("LargeRGB-elle-V2-g18", "icc"))
        files.append(("LargeRGB-elle-V2-g22", "icc"))
        files.append(("LargeRGB-elle-V2-labl", "icc"))
        files.append(("LargeRGB-elle-V2-rec709", "icc"))
        files.append(("LargeRGB-elle-V2-srgbtrc", "icc"))
        files.append(("LargeRGB-elle-V4-g10", "icc"))
        files.append(("LargeRGB-elle-V4-g18", "icc"))
        files.append(("LargeRGB-elle-V4-g22", "icc"))
        files.append(("LargeRGB-elle-V4-labl", "icc"))
        files.append(("LargeRGB-elle-V4-rec709", "icc"))
        files.append(("LargeRGB-elle-V4-srgbtrc", "icc"))
        files.append(("Rec709-elle-V2-rec709", "icc"))
        files.append(("Rec709-elle-V4-rec709", "icc"))
        files.append(("Rec2020-elle-V2-g10", "icc"))
        files.append(("Rec2020-elle-V2-g18", "icc"))
        files.append(("Rec2020-elle-V2-g22", "icc"))
        files.append(("Rec2020-elle-V2-labl", "icc"))
        files.append(("Rec2020-elle-V2-rec709", "icc"))
        files.append(("Rec2020-elle-V2-srgbtrc", "icc"))
        files.append(("Rec2020-elle-V4-g10", "icc"))
        files.append(("Rec2020-elle-V4-g18", "icc"))
        files.append(("Rec2020-elle-V4-g22", "icc"))
        files.append(("Rec2020-elle-V4-labl", "icc"))
        files.append(("Rec2020-elle-V4-rec709", "icc"))
        files.append(("Rec2020-elle-V4-srgbtrc", "icc"))
        files.append(("sRGB-elle-V2-g10", "icc"))
        files.append(("sRGB-elle-V2-g18", "icc"))
        files.append(("sRGB-elle-V2-g22", "icc"))
        files.append(("sRGB-elle-V2-labl", "icc"))
        files.append(("sRGB-elle-V2-srgbtrc", "icc"))
        files.append(("sRGB-elle-V4-g10", "icc"))
        files.append(("sRGB-elle-V4-g18", "icc"))
        files.append(("sRGB-elle-V4-g22", "icc"))
        files.append(("sRGB-elle-V4-labl", "icc"))
        files.append(("sRGB-elle-V4-srgbtrc", "icc"))
        files.append(("XYZ-D50-Identity-elle-V4", "icc"))
     
        /* https://www.mitsubishielectric.com.au/577.htm */
        files.append(("CPD70_SF", "icc"))
        files.append(("CPD70_ST", "icc"))
        files.append(("CPD70_UF", "icc"))
        files.append(("CPD90_ST", "icc"))
        files.append(("CPD90_UF", "icc"))
        files.append(("CPK60_ST", "icc"))
        files.append(("CPK60_UF", "icc"))
        files.append(("CPM1", "icc"))
        
        /* http://www.blog.wan-ifra.org/articles/2015/09/30/newspaper-colour-profile-download */
        files.append(("WAN-IFRAnewspaper26v5_gr", "icc"))
        files.append(("WAN-IFRAnewspaper26v5", "icc"))
        
        /* http://www.eci.org/doku.php?id=en:downloads#icc_profiles_from_eci */
        files.append(("ECI-RGB.V1.0", "icc"))
        files.append(("PSRgravureHWC", "icc"))
        files.append(("PSRgravureLWC", "icc"))
        files.append(("PSRgravureMF", "icc"))
        files.append(("PSRgravureSC", "icc"))
        files.append(("ISOcoated175bb", "icc"))
        files.append(("ISOuncoatedyellowish175bb", "icc"))
        files.append(("ISOcoated175sb", "icc"))
        files.append(("ISOuncoatedyellowish175sb", "icc"))
        files.append(("ISOcoatedbb", "icc"))
        files.append(("ISOuncoatedyellowishbb", "icc"))
        files.append(("ISOcoatedsb", "icc"))
        files.append(("ISOuncoatedyellowishsb", "icc"))
        files.append(("ISOuncoated175bb", "icc"))
        files.append(("ISOwebcoated175bb", "icc"))
        files.append(("ISOuncoated175sb", "icc"))
        files.append(("ISOwebcoated175sb", "icc"))
        files.append(("ISOuncoatedbb", "icc"))
        files.append(("ISOwebcoatedbb", "icc"))
        files.append(("ISOuncoatedsb", "icc"))
        files.append(("ISOwebcoatedsb", "icc"))
        files.append(("PSOcoated_v3", "icc"))
        files.append(("ISOcoated_v2_to_PSOcoated_v3_DeviceLink", "icc"))
        files.append(("PSO_Coated_v3_Glossy_laminate", "icc"))
        files.append(("PSO_Coated_v3_Matte_laminate", "icc"))
        files.append(("eciRGB_v2", "icc"))
        files.append(("eciRGB_v2_ICCv4", "icc"))
        files.append(("PSOsc-b_paper_v3_FOGRA54", "icc"))
        files.append(("eciCMYK", "icc"))
        files.append(("PSOcoated_v3_to_ISOcoated_v2_DeviceLink", "icc"))
        files.append(("eciCMYK_to_PSOuncoated_v3_DeviceLink", "icc"))
        files.append(("eciCMYK_to_PSOcoated_v3_DeviceLink", "icc"))
        files.append(("ISOcoated_v2_to_eciCMYK_DeviceLink", "icc"))
        files.append(("PSR_SC_PLUS_V2_M1", "icc"))
        files.append(("PSR_SC_STD_V2_M1", "icc"))
        files.append(("PSR_LWC_PLUS_V2_M1_v2", "icc"))
        files.append(("PSR_LWC_STD_V2_M1", "icc"))
        files.append(("PSR_MF_V2_M1", "icc"))
        files.append(("PSOuncoated_v3_FOGRA52", "icc"))
        
        /* https://github.com/YoshikuniJujo/iccp-file */
        files.append(("benq_ew2420", "icc"))
        files.append(("e4800_PhotoRag", "icc"))
        files.append(("epson_4000_shil_shilky_330gsm", "icc"))
        files.append(("iccp", "icc"))
        files.append(("igsg_x800_iso_chromeX", "icc"))
        files.append(("KN_PX5V_PIC_TPS_DGSMP", "icc"))
        files.append(("pic1_ppd177_pro9000", "icc"))
        
        /* https://sites.google.com/site/chromasoft/icmprofiles */
        files.append(("MelissaRGBD65", "icc"))
        files.append(("ProPhoto22", "icc"))
        files.append(("ProPhoto22D65", "icc"))
        files.append(("ProPhotoD65", "icc"))
        files.append(("sRGB Gamma22", "icc"))
        files.append(("WideGamutD65", "icc"))
        files.append(("Adobe98", "icc"))
        files.append(("CIERGB", "icc"))
        files.append(("MelissaRGB", "icc"))
        files.append(("ProPhoto", "icc"))
        files.append(("WideGamut", "icc"))
        files.append(("RSWOP", "icm"))
        files.append(("sRGB Color Space Profile", "icm"))
        files.append(("sample", "icm"))
        files.append(("AdobeGammaTest", "icm"))
        files.append(("bluish", "icc"))
        files.append(("gamma_1_0", "icc"))
        files.append(("gamma_2_2_bright", "icc"))
        files.append(("gamma_2_2_lowContrast", "icc"))
        files.append(("gamma_2_2", "icc"))
        files.append(("dummy-lut-output-profile", "icc"))
        files.append(("can4200n", "icm"))
        
        /* Hugh's Mac */
        files.append(("ACESCG Linear", "icc"))
        files.append(("AdobeRGB1998", "icc"))
        files.append(("DCI(P3) RGB", "icc"))
        files.append(("Display P3", "icc"))
        files.append(("Generic CMYK Profile", "icc"))
        files.append(("Generic Gray Gamma 2.2 Profile", "icc"))
        files.append(("Generic Gray Profile", "icc"))
        files.append(("Generic Lab Profile", "icc"))
        files.append(("Generic RGB Profile", "icc"))
        files.append(("Generic XYZ Profile", "icc"))
        files.append(("ITU-709", "icc"))
        files.append(("ITU-2020", "icc"))
        files.append(("ROMM RGB", "icc"))
        files.append(("sRGB Profile", "icc"))
        files.append(("Black & White", "icc"))
        files.append(("Blue Tone", "icc"))
        files.append(("Gray Tone", "icc"))
        files.append(("Lightness Decrease", "icc"))
        files.append(("Lightness Increase", "icc"))
        files.append(("Sepia Tone", "icc"))
        files.append(("WebSafeColors", "icc"))
        files.append(("Color LCD-77E200AD-B0E6-0317-4BBF-F8B53DA3952C", "icc"))
        files.append(("LEN L28u-30-BB28FBA7-6043-56DF-22BF-23B9DBFFD80C", "icc"))
        files.append(("LEN L28u-30-FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF", "icc"))
        files.append(("Nameless Display-BB28FBA7-6043-56DF-22BF-23B9DBFFD80C", "icc"))
        files.append(("Nameless Display-CB7164BC-CB7A-34F0-A46F-A525E34EABC0", "icc"))
        files.append(("XGIMI TV-CB7164BC-CB7A-34F0-A46F-A525E34EABC0", "icc"))
        files.append(("XGIMI TV-FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF", "icc"))
        files.append(("truecolor.us_NULL", "icc"))
        files.append(("truecolor.us_Sample_Profile", "icc"))
        files.append(("Ekta Space PS 5, J Holmes", "icc"))
        
        /* https://www.adobe.com/support/downloads/iccprofiles/iccprofiles_win.html */
        files.append(("AppleRGB", "icc"))
        files.append(("ColorMatchRGB", "icc"))
        files.append(("PAL_SECAM", "icc"))
        files.append(("SMPTE-C", "icc"))
        files.append(("VideoHD", "icc"))
        files.append(("VideoNTSC", "icc"))
        files.append(("VideoPAL", "icc"))
        files.append(("WebCoatedSWOP2006Grade5", "icc"))
        files.append(("WebCoatedSWOP2006Grade3", "icc"))
        files.append(("USWebUncoated", "icc"))
        files.append(("WebCoatedFOGRA28", "icc"))
        files.append(("USWebCoatedSWOP", "icc"))
        files.append(("UncoatedFOGRA29", "icc"))
        files.append(("JapanWebCoated", "icc"))
        files.append(("JapanColor2003WebCoated", "icc"))
        files.append(("JapanColor2002Newspaper", "icc"))
        files.append(("JapanColor2001Uncoated", "icc"))
        files.append(("JapanColor2001Coated", "icc"))
        files.append(("CoatedGRACoL2006", "icc"))
        files.append(("CoatedFOGRA39", "icc"))
        files.append(("CoatedFOGRA27", "icc"))
        
        /* https://github.com/Beep6581/RawTherapee */
        files.append(("Canon EOS 5D", "icc"))
        files.append(("Canon EOS 20D", "icc"))
        files.append(("Canon EOS 40D", "icc"))
        files.append(("Canon EOS 450D", "icc"))
        files.append(("Canon EOS 550D", "icc"))
        files.append(("Canon EOS-1D Mark III", "icc"))
        files.append(("Canon PowerShot G10", "icc"))
        files.append(("Canon PowerShot G12", "icc"))
        files.append(("Nikon D3S", "icc"))
        files.append(("Nikon D200", "icc"))
        files.append(("Nikon D700", "icc"))
        files.append(("Nikon D3000", "icc"))
        files.append(("Nikon D3100", "icc"))
        files.append(("Nikon D7000", "icc"))
        files.append(("Olympus E-P2", "icc"))
        files.append(("Panasonic DMC-FZ35", "icc"))
        files.append(("Panasonic DMC-FZ38", "icc"))
        files.append(("Panasonic DMC-FZ150", "icc"))
        files.append(("Panasonic DMC-G1", "icc"))
        files.append(("Panasonic DMC-G3", "icc"))
        files.append(("Panasonic DMC-GH1", "icc"))
        files.append(("Panasonic DMC-GH2", "icc"))
        files.append(("Pentax K200D", "icc"))
        files.append(("sd1_merrill_cloudy8140-CROP-WP10", "icm"))
        files.append(("sd1_merrill_cloudy8140-CROP-WP11", "icm"))
        files.append(("sd1_merrill_sunny8161-crop-wp10", "icm"))
        files.append(("sd1_merrill_sunny8161-crop-wp11", "icm"))
        files.append(("sd1_merrill_tungsten8130-CROP-WP10", "icm"))
        files.append(("sd1_merrill_tungsten8130-CROP-WP11", "icm"))
        files.append(("sd14-bl15-crop-matrix-gamma-wp10", "icm"))
        files.append(("sd14-bl15-crop-matrix-gamma-wp11", "icm"))
        files.append(("sd14-bl15-crop-matrix-gamma-wp12", "icm"))
        files.append(("Sony DSLR-A700", "icc"))
        files.append(("Sony DSLR-A900", "icc"))
        files.append(("Sony SLT-A55V", "icc"))
        files.append(("DCI-P3 D65", "icc"))
        files.append(("DCI-P3 Theater", "icc"))
        files.append(("RTv2_ACES-AP0", "icc"))
        files.append(("RTv2_ACES-AP1", "icc"))
        files.append(("RTv2_Best", "icc"))
        files.append(("RTv2_Beta", "icc"))
        files.append(("RTv2_Bruce", "icc"))
        files.append(("RTv2_Large", "icc"))
        files.append(("RTv2_Medium", "icc"))
        files.append(("RTv2_Rec2020", "icc"))
        files.append(("RTv2_sRGB", "icc"))
        files.append(("RTv2_Wide", "icc"))
        files.append(("RTv4_ACES-AP0", "icc"))
        files.append(("RTv4_ACES-AP1", "icc"))
        files.append(("RTv4_Best", "icc"))
        files.append(("RTv4_Beta", "icc"))
        files.append(("RTv4_Bruce", "icc"))
        files.append(("RTv4_Large", "icc"))
        files.append(("RTv4_Medium", "icc"))
        files.append(("RTv4_Rec2020", "icc"))
        files.append(("RTv4_sRGB", "icc"))
        files.append(("RTv4_Wide", "icc"))
#endif
        for (name, fileExtension) in files {
            let data = try getData(name: name, fileExtension: fileExtension)
            let file = try ICCColorProfile(data: data)
            for tag in file.tags {
                if case .aToB0 = tag {
                    print("aToB0")
                } else if case .aToB1 = tag {
                    print("aToB1")
                } else if case .aToB2 = tag {
                    print("aToB2")
                } else if case .aToB3 = tag {
                    print("aToB3")
                } else if case .bToA0 = tag {
                    print("bToA0")
                } else if case .bToA1 = tag {
                    print("bToA1")
                } else if case .bToA2 = tag {
                    print("bToA2")
                } else if case .bToA3 = tag {
                    print("bToA3")
                } else if case .bToD0 = tag {
                    print("bToD0")
                } else if case .bToD1 = tag {
                    print("bToD1")
                } else if case .bToD2 = tag {
                    print("bToD2")
                } else if case .bToD3 = tag {
                    print("bToD3")
                } else if case .dToB0 = tag {
                    print("dToB0")
                } else if case .dToB1 = tag {
                    print("dToB1")
                } else if case .dToB2 = tag {
                    print("dToB2")
                } else if case .dToB3 = tag {
                    print("dToB3")
                } else if case .gamut = tag {
                    print("gamut")
                } else if case .cied = tag {
                    print("cied")
                } else if case let .unknown(signature: signature, data: _) = tag {
                    print("unknown: \(signature)")
                } else if case .redTRC = tag {
                    print("redTRC")
                } else if case .greenTRC = tag {
                    print("greenTRC")
                } else if case .blueTRC = tag {
                    print("blueTRC")
                } else if case .charTarget = tag {
                    print("charTarget")
                } else if case .devd = tag {
                    print("devd")
                } else if case .gamutBoundaryDescription0 = tag {
                    print("gamutBoundaryDescription0")
                } else if case .gamutBoundaryDescription1 = tag {
                    print("gamutBoundaryDescription1")
                } else if case .gamutBoundaryDescription2 = tag {
                    print("gamutBoundaryDescription2")
                } else if case .gamutBoundaryDescription3 = tag {
                    print("gamutBoundaryDescription3")
                } else if case .customToStandardPcc = tag {
                    print("customToStandardPcc")
                } else if case .standardToCustomPcc = tag {
                    print("standardToCustomPcc")
                } else if case .mToB0 = tag {
                    print("mToB0")
                } else if case .mToB1 = tag {
                    print("mToB1")
                } else if case .mToB2 = tag {
                    print("mToB2")
                } else if case .mToB3 = tag {
                    print("mToB3")
                } else if case .aToM0 = tag {
                    print("aToM0")
                } else if case .spectralViewingConditions = tag {
                    print("spectralViewingConditions")
                } else if case .cxf = tag {
                    print("cxf")
                } else {
                    print(tag)
                }
            }
        }
    }

    static var allTests = [
        ("testDumpICC", testDumpICC),
    ]
}
